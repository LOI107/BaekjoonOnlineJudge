/*

< 기본사항 / 내 소스 >
- 시간 제한(1 초 / 0 MS)
- 메모리 제한(256 MB / 1988 KB)
- 문제를 푼 전원의 정답 비율(56.333 %)

< 문제 >
알파벳 소문자로만 이루어진 단어 S가 주어진다. 각각의 알파벳에 대해서, 단어에 포함되어 있는 경우에는 처음 등장하는 위치를, 
포함되어 있지 않은 경우에는 -1을 출력하는 프로그램을 작성하시오.

< 입력 >
첫째 줄에 단어 S가 주어진다. 단어의 길이는 100을 넘지 않으며, 알파벳 소문자로만 이루어져 있다.

< 출력 >
각각의 알파벳에 대해서, a가 처음 등장하는 위치, b가 처음 등장하는 위치, ... z가 처음 등장하는 위치를 공백으로 구분해서 출력한다.
만약, 어떤 알파벳이 단어에 포함되어 있지 않다면 -1을 출력한다. 단어의 첫 번째 글자는 0번째 위치이고, 두 번째 글자는 1번째 위치이다.

< 알고리즘 분류 >
- 문자열 처리

*/

#include <iostream>
#include <string>

using namespace std;

int main()
{
	int alphabet[26];
	string s;

	cin >> s;

	for (int i = 0; i < 26; i++) // 알파벳이 단어에 포함되어 있지 않다는 것으로 초기화
		alphabet[i] = -1;
	
	for (int i = s.length() - 1; i >= 0; i--) // 처음 등장하는 위치를 찾아야 하므로 뒤에서부터 찾아가며, 
		alphabet[s[i] - 'a'] = i;             // 앞에서도 찾고 뒤에서도 찾으면 앞의 데이터로 덮음
		
	for (int i = 0; i < 26; i++)
		cout << alphabet[i] << " ";

	cout << endl;
}